#!/usr/bin/env python3
"""
ุฅุฒุงูุฉ ุฌููุน ุนูุงูุงุช {% trans %} ูุชุญุฏูุซ ุงููุตูุต ูุจุงุดุฑุฉ ุจุงูุนุฑุจูุฉ
"""
import os
import re
import glob

def clean_trans_tags(file_path):
    """ุฅุฒุงูุฉ ุนูุงูุงุช {% trans %} ูู ููู ุงููุงูุจ"""
    
    if not os.path.exists(file_path):
        return False
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # ูุงููุณ ุงูุชุฑุฌูุงุช ุงูุดุงูู
        translations = {
            # ุงูุฃุณุงุณูุงุช
            "Welcome back": "ูุฑุญุจุงู ุจุนูุฏุชู",
            "Here's what's happening in your spare parts business today.": "ุฅููู ูุง ูุญุฏุซ ูู ุฃุนูุงู ูุทุน ุงูุบูุงุฑ ุงูููู.",
            "Dashboard": "ููุญุฉ ุงูุชุญูู",
            "Inventory": "ุงููุฎุฒูู",
            "Products": "ุงูููุชุฌุงุช",
            "Sales": "ุงููุจูุนุงุช",
            "Purchases": "ุงููุดุชุฑูุงุช",
            "Expenses": "ุงููุตุฑููุงุช",
            "Reports": "ุงูุชูุงุฑูุฑ",
            "Settings": "ุงูุฅุนุฏุงุฏุงุช",
            
            # ุงูุฅุญุตุงุฆูุงุช
            "Today's Sales": "ูุจูุนุงุช ุงูููู",
            "Monthly Revenue": "ุงูุฅูุฑุงุฏุงุช ุงูุดูุฑูุฉ",
            "Inventory Value": "ูููุฉ ุงููุฎุฒูู",
            "Monthly Expenses": "ุงููุตุฑููุงุช ุงูุดูุฑูุฉ",
            "transactions": "ูุนุงููุงุช",
            "sales this month": "ูุจูุนุงุช ูุฐุง ุงูุดูุฑ",
            "products": "ููุชุฌุงุช",
            "expenses": "ูุตุฑููุงุช",
            
            # ุงูุฅุฌุฑุงุกุงุช
            "Quick Actions": "ุงูุฅุฌุฑุงุกุงุช ุงูุณุฑูุนุฉ",
            "New Sale": "ุจูุน ุฌุฏูุฏ",
            "New Purchase": "ุดุฑุงุก ุฌุฏูุฏ",
            "Add Product": "ุฅุถุงูุฉ ููุชุฌ",
            "Record Expense": "ุชุณุฌูู ูุตุฑูู",
            "View Reports": "ุนุฑุถ ุงูุชูุงุฑูุฑ",
            "Sales Trend (Last 7 Days)": "ุงุชุฌุงู ุงููุจูุนุงุช (ุขุฎุฑ 7 ุฃูุงู)",
            
            # ุงูุชููู
            "Profile": "ุงูููู ุงูุดุฎุตู",
            "Logout": "ุชุณุฌูู ุงูุฎุฑูุฌ",
            "Notifications": "ุงูุฅุดุนุงุฑุงุช",
            "View All": "ุนุฑุถ ุงููู",
            
            # ุงููุตุงุฏูุฉ
            "Login": "ุชุณุฌูู ุงูุฏุฎูู",
            "Username": "ุงุณู ุงููุณุชุฎุฏู",
            "Password": "ูููุฉ ุงููุฑูุฑ",
            "Remember me": "ุชุฐูุฑูู",
            "Sign in": "ุฏุฎูู",
            
            # ุงูุฅุฌุฑุงุกุงุช ุงูุนุงูุฉ
            "Add": "ุฅุถุงูุฉ",
            "Edit": "ุชุนุฏูู",
            "Delete": "ุญุฐู",
            "Save": "ุญูุธ",
            "Cancel": "ุฅูุบุงุก",
            "Search": "ุจุญุซ",
            "Filter": "ุชุตููุฉ",
            "Actions": "ุงูุฅุฌุฑุงุกุงุช",
            "View": "ุนุฑุถ",
            "Details": "ุงูุชูุงุตูู",
            "Close": "ุฅุบูุงู",
            "Submit": "ุฅุฑุณุงู",
            "Update": "ุชุญุฏูุซ",
            "Create": "ุฅูุดุงุก",
            "Remove": "ุฅุฒุงูุฉ",
            
            # ุงูุจูุงูุงุช
            "Name": "ุงูุงุณู",
            "Price": "ุงูุณุนุฑ",
            "Stock": "ุงููุฎุฒูู",
            "Category": "ุงููุฆุฉ",
            "Brand": "ุงูุนูุงูุฉ ุงูุชุฌุงุฑูุฉ",
            "Description": "ุงููุตู",
            "Status": "ุงูุญุงูุฉ",
            "Date": "ุงูุชุงุฑูุฎ",
            "Amount": "ุงููุจูุบ",
            "Total": "ุงูุฅุฌูุงูู",
            "Quantity": "ุงููููุฉ",
            "Code": "ุงูููุฏ",
            "SKU": "ุฑูู ุงูููุชุฌ",
            
            # ุงูุญุงูุงุช
            "Active": "ูุดุท",
            "Inactive": "ุบูุฑ ูุดุท",
            "Available": "ูุชููุฑ",
            "In Stock": "ูุชููุฑ",
            "Low Stock": "ูุฎุฒูู ููุฎูุถ",
            "Out of Stock": "ููุฏ ุงููุฎุฒูู",
            "Pending": "ูู ุงูุงูุชุธุงุฑ",
            "Approved": "ููุงูู ุนููู",
            "Rejected": "ูุฑููุถ",
            
            # ุงูุฑุณุงุฆู
            "Loading...": "ุฌุงุฑู ุงูุชุญููู...",
            "No data available": "ูุง ุชูุฌุฏ ุจูุงูุงุช",
            "No results found": "ูู ูุชู ุงูุนุซูุฑ ุนูู ูุชุงุฆุฌ",
            "Success": "ูุฌุญ",
            "Error": "ุฎุทุฃ",
            "Warning": "ุชุญุฐูุฑ",
            "Info": "ูุนูููุงุช",
            "Confirmation": "ุชุฃููุฏ",
            
            # ุงูุชูุงุฑูุฎ
            "Today": "ุงูููู",
            "Yesterday": "ุฃูุณ",
            "This Week": "ูุฐุง ุงูุฃุณุจูุน",
            "This Month": "ูุฐุง ุงูุดูุฑ",
            "Last 7 Days": "ุขุฎุฑ 7 ุฃูุงู",
            "Last 30 Days": "ุขุฎุฑ 30 ููู",
            
            # ุงููุฎุฒูู
            "Product List": "ูุงุฆูุฉ ุงูููุชุฌุงุช",
            "Add New Product": "ุฅุถุงูุฉ ููุชุฌ ุฌุฏูุฏ",
            "Edit Product": "ุชุนุฏูู ุงูููุชุฌ",
            "Product Details": "ุชูุงุตูู ุงูููุชุฌ",
            "Categories": "ุงููุฆุงุช",
            "Brands": "ุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉ",
            "Suppliers": "ุงูููุฑุฏูู",
            
            # ุงููุจูุนุงุช
            "Sale List": "ูุงุฆูุฉ ุงููุจูุนุงุช",
            "New Sale": "ุจูุน ุฌุฏูุฏ",
            "Sale Details": "ุชูุงุตูู ุงูุจูุน",
            "Customer": "ุงูุนููู",
            "Invoice": "ุงููุงุชูุฑุฉ",
            
            # ุงููุดุชุฑูุงุช
            "Purchase List": "ูุงุฆูุฉ ุงููุดุชุฑูุงุช",
            "New Purchase": "ุดุฑุงุก ุฌุฏูุฏ",
            "Purchase Details": "ุชูุงุตูู ุงูุดุฑุงุก",
            "Supplier": "ุงูููุฑุฏ",
            
            # ุงููุตุฑููุงุช
            "Expense List": "ูุงุฆูุฉ ุงููุตุฑููุงุช",
            "New Expense": "ูุตุฑูู ุฌุฏูุฏ",
            "Expense Details": "ุชูุงุตูู ุงููุตุฑูู",
            "Expense Category": "ูุฆุฉ ุงููุตุฑูู",
            
            # ุงูุชูุงุฑูุฑ
            "Sales Report": "ุชูุฑูุฑ ุงููุจูุนุงุช",
            "Inventory Report": "ุชูุฑูุฑ ุงููุฎุฒูู",
            "Financial Report": "ุงูุชูุฑูุฑ ุงููุงูู",
            "Monthly Report": "ุงูุชูุฑูุฑ ุงูุดูุฑู"
        }
        
        # ุฅุฒุงูุฉ ุนูุงูุงุช {% trans %} ูุงุณุชุจุฏุงููุง ุจุงูุชุฑุฌูุฉ ุงูุนุฑุจูุฉ
        for english, arabic in translations.items():
            # ููุท ููุนุซูุฑ ุนูู {% trans "text" %}
            pattern1 = f'{{% trans "{english}" %}}'
            content = content.replace(pattern1, arabic)
            
            # ููุท ููุนุซูุฑ ุนูู {% trans 'text' %}
            pattern2 = f"{{% trans '{english}' %}}"
            content = content.replace(pattern2, arabic)
        
        # ุฅุฒุงูุฉ ุฃู ุนูุงูุงุช {% trans %} ูุชุจููุฉ ุจููุท ุนุงู
        # ูุฐุง ุณูุฒูู ุงูุนูุงูุงุช ููุชุฑู ุงููุต ุงูุฅูุฌููุฒู ููุง ูู
        trans_pattern = r'{%\s*trans\s*["\']([^"\']*)["\']?\s*%}'
        content = re.sub(trans_pattern, r'\1', content)
        
        # ุฅุฒุงูุฉ {% load i18n %} ุฅุฐุง ูุงู ููุฌูุฏ
        content = re.sub(r'{%\s*load\s+i18n\s*%}', '', content)
        
        # ูุชุงุจุฉ ุงูููู ุงููุญุฏุซ
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            return True
        
        return False
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ูุนุงูุฌุฉ {file_path}: {e}")
        return False

def main():
    print("๐งน ุฅุฒุงูุฉ ุนูุงูุงุช {% trans %} ูุชุญุฏูุซ ุงููุตูุต...")
    
    # ุงูุจุญุซ ุนู ุฌููุน ูููุงุช HTML ูู ูุฌูุฏ templates
    template_files = []
    for root, dirs, files in os.walk('templates'):
        for file in files:
            if file.endswith('.html'):
                template_files.append(os.path.join(root, file))
    
    updated_count = 0
    
    for template_file in template_files:
        if clean_trans_tags(template_file):
            print(f"โ ุชู ุชุญุฏูุซ: {template_file}")
            updated_count += 1
        else:
            print(f"โช ูุง ุชูุฌุฏ ุชุบููุฑุงุช: {template_file}")
    
    print(f"\n๐ ุชู ุชุญุฏูุซ {updated_count} ููู ูู ุฃุตู {len(template_files)} ููู")
    print("โ ุชู ุฅุฒุงูุฉ ุฌููุน ุนูุงูุงุช ุงูุชุฑุฌูุฉ ูุชุญุฏูุซ ุงููุตูุต ููุนุฑุจูุฉ!")

if __name__ == '__main__':
    main()
